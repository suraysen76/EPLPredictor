@model IEnumerable<SS1892.EPLPredictor.Models.FixtureModel>

@{
    var role = AuthModel.Role;
    var shortDate = "";
    bool isLocked = true;
    int nextMatchWeek = 1;
    var type = Model.FirstOrDefault().Type ;
    ViewData["Title"] = "Fixtures";
    if (Model.Where(m => m.IsLocked == false || m.IsLocked is null).Count() > 1)
    {
        //var x = Model.Where(m => m.IsLocked == false || m.IsLocked is null).FirstOrDefault();
        nextMatchWeek = Model.Where(m => m.IsLocked == false || m.IsLocked is null).OrderBy(o => o.MatchWeek).FirstOrDefault().MatchWeek;
    }
}

<h1>Fixtures </h1>

<p>-
    @if (@role == "Admin" && (@type == "UCL" || @type == "FA" || @type == "CRB" ))
            {
        <a asp-action="Create" asp-route-type="@type">Create New Fixture</a>
            }
</p>
<ul>
    <li>
        <a asp-area="" asp-controller="Fixtures" asp-action="Index" asp-route-type="EPL">EPL Fixtures</a>
    </li>
    <li>
        <a asp-area="" asp-controller="Fixtures" asp-action="Index" asp-route-type="UCL">UCL Fixtures</a>
    </li>
</ul>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MatchWeek)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Location)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.HomeTeam)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AwayTeam)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Result)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
            var homeTeamColor = "";
            var awayTeamColor = "";
            if ( !String.IsNullOrEmpty(item.Result))
            {
                var results = item.Result.Split('-');

                if (Convert.ToInt16(results[0]) > Convert.ToInt16(results[1]))
                {
                    homeTeamColor = "Lime";
                    awayTeamColor = "";
                }
                else if (Convert.ToInt16(results[1]) > Convert.ToInt16(results[0]))
                {
                    homeTeamColor = "";
                    awayTeamColor = "Lime";
                }
                else if (Convert.ToInt16(results[0]) == Convert.ToInt16(results[1]))
                {
                    homeTeamColor = "silver";
                    awayTeamColor = "silver";
                }
            }
            isLocked = item.IsLocked.HasValue ? item.IsLocked.Value : false;
            shortDate=item.Date.ToString("dd/MM/yy hh:mm tt");//04/08/21
            var color = "";
            var focus = false;
            if (item.MatchWeek == nextMatchWeek && !isLocked)
            {
               
                color = "Yellow";
                focus = true;                         

            }
            <tr style="background-color:@color">                
                <td>
                    
                    @if (@focus){
                        <input style="border:none;outline-width:0;background-color:@color" readonly asp-for="@item.Id" type="text" autofocus/>
                    }
                    else {
                    @*    @Html.DisplayFor(modelItem => item.Id )*@
                        <input style="border:none;outline-width:0;background-color:@color" readonly asp-for="@item.Id" type="text"  />
                    }

                    @*@Html.DisplayFor(modelItem => item.Id  )*@
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MatchWeek)
            </td>
            <td>
                @shortDate                
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location)
            </td>
            <td style="background-color:@homeTeamColor">
                    @Html.DisplayFor(modelItem => item.HomeTeam)
            </td>
                <td style="background-color:@awayTeamColor">
                    @Html.DisplayFor(modelItem => item.AwayTeam)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Result)
            </td>
            <td>
            @if (@role == "Admin" && @isLocked == false)
            {
                <a asp-action="Edit" asp-route-id="@item.Id" >Edit</a><span> | </span> 
                <a asp-action="EditResult" asp-controller="Teams" asp-route-id="@item.Id" >Result</a><span> | </span>  
                @*<a asp-action="Details" asp-route-id="@item.Id">Details</a><span> | </span>                   
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>*@
            } 
            @if (@role == "Admin" && @isLocked == true)
            {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>

                        <span> | </span>
                <a asp-action="ResetResult" asp-controller="Teams" asp-route-id="@item.Id" >Reset Result</a>
            } 
 
            </td>
        </tr>
}
    </tbody>
</table>

