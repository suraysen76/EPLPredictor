@model IEnumerable<SS1892.EPLPredictor.Models.FixtureModel>

@{
    var role = AuthModel.Role;
    var shortDate = "";
    bool? isLocked = true;
    ViewData["Title"] = "Team Fixture";
    var nextMatchWeek = Model.Where(m => m.IsLocked == false).OrderBy(o => o.MatchWeek).First().MatchWeek;
}

<h1>Team Fixture</h1>

<p>
    @*<a asp-action="Create">Create New</a>*@
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MatchWeek)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Location)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.HomeTeamId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AwayTeamId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Result)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
            var homeTeamColor = "";
            var awayTeamColor = "";
            if (!String.IsNullOrEmpty(item.Result))
            {
                var results = item.Result.Split('-');

                if (Convert.ToInt16(results[0]) > Convert.ToInt16(results[1]))
                {
                    homeTeamColor = "Lime";
                    awayTeamColor = "";
                }
                else if (Convert.ToInt16(results[1]) > Convert.ToInt16(results[0]))
                {
                    homeTeamColor = "";
                    awayTeamColor = "Lime";
                }
                else if (Convert.ToInt16(results[0]) == Convert.ToInt16(results[1]))
                {
                    homeTeamColor = "grey";
                    awayTeamColor = "grey";
                }
            }
            isLocked = item.IsLocked;
            shortDate=item.Date.ToString("dd/MM/yy");//04/08/21
            var color = "";
            if (item.MatchWeek == nextMatchWeek) { color = "Yellow"; }
            <tr style="background-color:@color">
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MatchWeek)
            </td>
            <td>
                @shortDate                
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location)
            </td>
            <td style="background-color:@homeTeamColor">
                @Html.DisplayFor(modelItem => item.HomeTeamId)
            </td>
                <td style="background-color:@awayTeamColor">
                    @Html.DisplayFor(modelItem => item.AwayTeamId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Result)
            </td>
            <td>
            @if (@role == "Admin" && @isLocked == false)
            {
                <a asp-action="Edit" asp-route-id="@item.Id" >Edit</a><span> | </span> 
                <a asp-action="EditResult" asp-controller="Teams" asp-route-id="@item.Id" >Result</a><span> | </span>  
                <a asp-action="Details" asp-route-id="@item.Id">Details</a><span> | </span>                   
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            } 
            @if (@role == "Admin" && @isLocked == true)
            {
                <a asp-action="ResetResult" asp-controller="Teams" asp-route-id="@item.Id" >Reset Result</a>
            } 
 
            </td>
        </tr>
}
    </tbody>
</table>
<div>
    <a asp-action="Index" asp-controller="Teams" >Back to Teams</a>
</div>
